### Optativa: Robòtica i Programació en Python

# Python – Consolidació **`print`**, **`input`**, i explicació nous mètodes.


1. **`.strip()`**

1. **`.isdigit()`**

1. **`date.today().year`**

1. **`f-strings`**

---

## Objectius de la sessió
- Consolidar els conceptes de **`variables`** amb inicialització buida i anotacions de tipus
- Entrada / sortida i validació d'errors
- Condicionals i bucles


---

## Definició de <u>variables</u>

Tot i que, a <kbd>Python</kbd> <u>no cal</u>, cal que us acostumeu a definir les variables.  

```python
# Declaro variables
nom  = str()  # str -> String -> Cadena de text
edat = int()  # int -> Integer -> Enter (número sense decimals)
nota = float()  # float -> Decimals (número amb decimals)
```

---

## Comanda <kbd>print()</kbd> (1/3)

- Què fa?
   - Mostra el text que rep per paràmetre per consola.

<p style="font-size: smaller; background-color:ivory; border: 1px blue dotted;"  target="_blank" rel="noopener noreferrer">Per més info sobre la funció <a href="https://docs.python.org/3/library/functions.html#print" target=_blank"><u><kbd>print()</kbd></u> (docs.python.org)</a> de Pyhton</p>

----

## Comanda <kbd>print()</kbd> (2/3)

Ajuda que mostra **VSC** de  <kbd>print()</kbd>

![alt text](../../../assets/img/info-vsc-python-print.png)

- Què retorna?

<kbd>-> None</kbd> indica que <strong>NO</strong> retorna res

----

## Comanda <kbd>print()</kbd> (3/3)

Ajuda que mostra **VSC** de  <kbd>print()</kbd>

![alt text](../../../assets/img/info-vsc-python-print.png)

- Quins arguments té?

|Nom argument|Tipus argument|Valor per defecte|
|----|----|----|
|`sep`|`str`|`" "`|
|`end`|`str`|`"\n"`|

---

## Comanda <kbd>input()</kbd> (1/3)

- Què fa?
   - Llegeix el que l'usuari escriu per consola fins a trobar un **salt de línia** (<kbd>Enter</kbd>).

<p style="font-size: smaller; background-color:ivory; border: 1px blue dotted;"  target="_blank" rel="noopener noreferrer">Per més info sobre la funció <a href="https://docs.python.org/3/library/functions.html#input" target=_blank"><u><kbd>input()</kbd></u> (docs.python.org)</a> de Pyhton</p>

----

## Comanda <kbd>input</kbd> (2/3)

Ajuda que mostra **VSC** de  <kbd>input()</kbd>

![alt text](../../../assets/img/info-vsc-python-input.png)

- Què retorna?

<kbd>-> str</kbd> indica que  retorna una cadena de tipus  **`str`**



----

## Comanda <kbd>input()</kbd> (3/3)

Ajuda que mostra **VSC** de  <kbd>input()</kbd>

![alt text](../../../assets/img/info-vsc-python-strip.png)

- Per què ho fem així?
    ```python
    edat = int(input())
    ```

> **Recordatori**: convertir l'entrada a `int`/`float` abans de fer càlculs


---

## Concepte <kbd>f-strings</kbd> (1/6)

### Què són les **f-strings**?
- Des de **Python 3.6**: cadenes amb prefix **`f`** que permeten posar **expressions** entre claus **`{ }`**.
- Fan el codi **més curt i llegible** que concatenar amb `+` o usar `format()`.

```python
nom: str = "Laia"
edat: int = 17
print(f"Hola, {nom}! Tens {edat} anys.")
# Sortida per conmsola ->  Hola, Laia! Tens 17 anys.
```

----

## Concepte <kbd>f-strings</kbd> (2/6)

### Sintaxi bàsica

- Escriu **`f"..."`** (o **`f'...'**`) i col·loca **expressions** dins `{expressio}`.

```python
a: int = 5
b: int = 3
print(f"{a} + {b} = {a + b}")  # 5 + 3 = 8

nums = [10, 20, 30]
print(f"El primer és {nums[0]}")    # 10
```
> <hr>
> Recorda: dins `{ }` hi van **expressions** (variables, operacions, crides a funció...).
> 
> No s'hi fan assignacions ni bucles.
> <hr>

----

## Concepte <kbd>f-strings</kbd> (3/6)

### Expressions típiques dins **`{ }`**
- Variables: **`{nom}`**, **`{edat}`**
- Operacions: **`{preu * quantitat}`**, **`{(a+b)/2}`**
- Crides a funcions: **`{abs(-7)}`**, **`{len(text)}`**
- Índexos i atributs: **`{llista[2]}`**, **`{usuari.nom}`**

```python
preu: float = 12.5
q: int = 3
print(f"Total: {preu * q} €")  # Total: 37.5 €
```

----

## Concepte <kbd>f-strings</kbd> (4/6)

### Format numèric

| Especificador | Exemple | Sortida | Ús |
|---|---:|---:|---|
| `:.2f` | `f"{3.14159:.2f}"` | `3.14` | 2 decimals |
| `:05d` | `f"{42:05d}"` | `00042` | farcit amb zeros |
| `:>8`  | `f"{42:>8}"` | `      42` | alineat a la dreta |
| `:<8`  | `f"{42:<8}"` | `42      ` | alineat a l’esquerra |
| `:^8`  | `f"{42:^8}"` | `   42   ` | centrat |
| `:,`   | `f"{12000:,}"` | `12,000` | separador de milers* |
| `:.1%` | `f"{0.875:.1%}"` | `87.5%` | percentatge |
| `:b`   | `f"{13:b}"` | `1101` | binari |
| `:x`   | `f"{255:x}"` | `ff` | hexadecimal minúsc. |

<p style="font-size: smaller; background-color:ivory; border: 1px blue dotted;">
*Per defecte, Python usa el format anglosaxó per milers/decimals. Si vols control absolut, construeix el format manualment o usa llibreries de localització.
</p>


----

## Concepte <kbd>f-strings</kbd> (5/6)

### Dates i hores amb **`f-strings`**

```python
from datetime import datetime
ara = datetime.now()
print(f"Avui és {ara:%d/%m/%Y} i són les {ara:%H:%M}")
# → Avui és 23/10/2025 i són les 09:15
```
- Després dels **`:`** pots usar codis de **`strftime`** (**`%Y`**, **`%m`**, **`%d`**, **`%H`**, **`%M`**, ...).

<p style="font-size: smaller; background-color:ivory; border: 1px blue dotted;">
Docs: <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes" target="_blank" rel="noopener noreferrer">Codi de format de dates</a>
</p>
----

## Concepte <kbd>f-strings</kbd> (6/6)

### Errors típics (i com evitar-los)
- ❌ Oblidar el **prefix `f`**:
  ```python
  print("Hola, {nom}")   # literal, no s’avalua
  ```
  ✅ `print(f"Hola, {nom}")`

- ❌ No convertir l’entrada d’usuari:
  ```python
  edat_text = input("Edat? ")
  print(f"L'any vinent: {edat_text + 1}")  # ERROR
  ```
  ✅ `edat = int(edat_text); print(f"L'any vinent: {edat + 1}")`

- ❌ Expressions massa llargues dins `{ }` → calcula-ho abans en variables.


---

## 1a Activitat: Fitxa persona

1. Defineix les variables

  * **`nom`** de tipus cadena (**`str`**), i
  * **`edat`** de tipus enter (**`int`**)

2. Demana a l'usuari el seu **`nom`** i la seva **`edat`**.

3. Valida que **`edat`** sigui un ***enter*** més gran que **`0`** (bucle)

4. Calcula l'any de naixement i mostra-ho amb **f-strings**

5. Indica si és **major d'edat** (**`>=18`**)

----

## 1a Activitat: Fitxa persona

```python
from datetime import date

# Definició de variables
# Demana nom i edat
# Valida que edat sigui > 0
# Calcula any de naixement i mostra missatges
```

<p style="font-size: smaller; background-color:ivory; border: 1px blue dotted;">Consulteu <a href="../../../assets/files/01_fitxa_persona_inici.py" target=_blank"><u><kbd>01_fitxa_persona_inici.py</kbd></u></a></p>


---

## 1a Activitat: Fitxa persona

➤ Mireu `materials/01_fitxa_persona_solucio.py`


![alt text](info-vsc-python-input.png)

---

## A2. Classificador de notes (25’) – Enunciat
- Demana una **nota** (0–10), permetent punt o coma
- Valida el rang amb `while + try/except`
- Mostra la menció:
  - ≥9 **Excel·lent** · ≥7 **Notable** · ≥5 **Aprovat** · <5 **Suspès**

---

## A2. Plantilla
```python
nota: float = 0.0
# Llegeix la nota (0-10) i valida
# Calcula i mostra la menció
```
➤ Consulteu `materials/02_classificador_notes_inici.py`

---

## A2. Solució (referència)
➤ Mireu `materials/02_classificador_notes_solucio.py`

---

## A3. Semàfor del robot (20’) – Enunciat
- Llindars: STOP < 20 · LENT 20–50 · RÀPID > 50
- Bucle fins que l’alumne escrigui **q**
- Mostra l'acció resultant

---

## A3. Plantilla
```python
DISTANCIA: int = 0
LLINDAR_STOP: int = 20
LLINDAR_LENT: int = 50
accio: str = ""
# Llegeix distància o 'q', valida, i decideix acció
```
➤ Consulteu `materials/03_semafor_robot_inici.py`

---

## A3. Solució (referència)
➤ Mireu `materials/03_semafor_robot_solucio.py`

---

## Autoavaluació (5’)
- [ ] He declarat variables amb tipus i valor inicial
- [ ] He validat l’entrada a cada programa
- [ ] He fet servir f-strings per a la sortida
- [ ] Les condicions cobreixen tots els casos (incloent límits)
- [ ] He provat entrades vàlides i invàlides

---

## Rúbrica (10 punts)
- Declaració disciplinada: **2**
- Validació i gestió d'errors: **3**
- Lògica i condicions: **3**
- Presentació (missatges clars, f-strings): **1**
- Neteja del codi: **1**

---

## Recursos i entrega
- Fitxa per a l'alumnat: `alumnes/fitxa_activitat.md`
- Fitxers d'inici i solucions a `materials/`
- **Entrega**: pugeu els 3 fitxers resolts al vostre repositori
