# **XML**  
## eXtensible Markup Language  

**Introducci√≥ al llenguatge XML**

---

## Qu√® √©s XML?

- **Llenguatge de marques extensible** dissenyat per **emmagatzemar i transportar dades**.  
- Basat en **text** i f√†cilment llegible per **persones i m√†quines**.  
- No defineix com es mostra la informaci√≥, sin√≥ **qu√® significa**.  
- √âs un **est√†ndard** del W3C (World Wide Web Consortium).

---

## Objectius del llenguatge XML

- Facilitar l‚Äô**intercanvi de dades** entre aplicacions i sistemes.  
- Representar informaci√≥ de manera **estructurada** i **auto-descriptiva**.  
- Permetre la **validaci√≥** de documents segons regles formals (DTD / XSD).  
- Ser **independent** de plataformes, llenguatges i formats de programaci√≥.

---

## Exemple b√†sic

```xml
<?xml version="1.0" encoding="UTF-8"?>
<llibre>
  <titol>El nom de la rosa</titol>
  <autor>Umberto Eco</autor>
  <any>1980</any>
</llibre>
```

- <span class="codi">&lt;?xml ... ?></span> ‚Üí declaraci√≥ XML.  
- <span class="codi">&lt;llibre></span> √©s l‚Äô**arrel** del document.  
- Cada element t√© una **etiqueta d‚Äôobertura** i una **de tancament**.

---

## Components d‚Äôun document XML

<table>
  <thead>
    <tr><th>Component</th><th>Descripci√≥</th><th>Exemple</th></tr>
  </thead>
  <tbody>
    <tr><td><strong>Element</strong></td><td>Un bloc<br>d‚Äôinformaci√≥</td><td><code class="codi petit">&lt;titol&gt;1984&lt;/titol&gt;</code></td></tr>
    <tr><td><strong>Atribut</strong></td><td>Propietat dins<br>d‚Äôuna etiqueta</td><td><code class="codi petit">&lt;llibre idioma="catal√†"&gt;</code></td></tr>
    <tr><td><strong>Arrel</strong></td><td>Element <br>cont√© la resta</td><td><code class="codi petit">&lt;llibre&gt;...&lt;/llibre&gt;</code></td></tr>
    <tr><td><strong>Comentari</strong></td><td>Text explicatiu</td><td><code class="codi petit">&lt;!-- Exemple --&gt;</code></td></tr>
    <tr><td><strong>Entitat</strong></td><td>Car√†cter especial</td><td><code class="codi petit">&amp;lt; &amp;gt; &amp;amp;</code><br><span class="codi petit vermell">&lt;autor nom="Peix & marisc"></span><br><span class="codi petit">&lt;autor nom="Peix  &amp;amp; marisc"> </td></tr>
  </tbody>
</table>

---

## Regles b√†siques de sintaxi

1. Totes les etiquetes s‚Äôhan de **tancar correctament**.  
2. Els elements han d‚Äôestar **ben niats**.  
3. Nom√©s pot haver-hi **un element arrel**.  
4. Els noms s√≥n **sensibles a maj√∫scules/min√∫scules**.  
5. Els valors d‚Äôatributs han d‚Äôanar **entre cometes**.  

---

## Exemple d‚Äôerror

```xml
<llibre>
  <titol>1984</titol>
  <autor>George Orwell
</llibre>
```

‚ùå L‚Äôelement <span class="codi">&lt;autor></span> no est√† tancat.  
‚úÖ Correcci√≥:

```xml
<autor>George Orwell</autor>
```

---

## Espais de noms (namespaces)

Serveixen per **evitar conflictes** entre etiquetes de diferents vocabularis.

```xml
<producte xmlns:es="http://exemple.com/esquema">
  <es:nom>M√≤bil</es:nom>
  <es:preu>350</es:preu>
</producte>
```

- <span class="codi">xmlns:es</span> defineix un prefix per identificar el conjunt d‚Äôetiquetes.  
- √âs essencial quan es combinen documents XML de fonts diferents.

---

## Validaci√≥ de documents

### 1. **Ben format**
El document compleix les regles b√†siques de sintaxi.

### 2. **V√†lid**
A m√©s de ser ben format, segueix una estructura definida a una **DTD** o un **XML Schema (XSD)**.

---

## Exemple amb DTD

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE llibre [
  <!ELEMENT llibre (titol, autor)>
  <!ELEMENT titol (#PCDATA)>
  <!ELEMENT autor (#PCDATA)>
]>
<llibre>
  <titol>1984</titol>
  <autor>George Orwell</autor>
</llibre>
```

---

## Avantatges de l‚ÄôXML

- **Interoperable** entre aplicacions i plataformes.  
- **Llegible** per humans i processable per m√†quines.  
- Pot ser **validat** autom√†ticament.  
- **Extensible**: pots definir les teves pr√≤pies etiquetes.  
- **Estandarditzat** pel W3C.

---

## Limitacions

- M√©s **verb√≥s** que altres formats (JSON, YAML).  
- No √©s ideal per a **dades molt grans** o **transmissions freq√ºents**.  
- Requereix **validaci√≥ i an√†lisi** m√©s complexos.  
- Pot ser **lent** de processar en aplicacions de temps real.

---

## Comparaci√≥ XML vs JSON

<table>
  <thead>
    <tr>
      <th>Caracter√≠stica</th>
      <th>XML</th>
      <th>JSON</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Verbositat</td>
      <td>Alta</td>
      <td>Baixa</td>
    </tr>
    <tr>
      <td>Llegibilitat</td>
      <td>Bona</td>
      <td>Excel¬∑lent</td>
    </tr>
    <tr>
      <td>Suport per atributs</td>
      <td>S√≠</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Validaci√≥ formal</td>
      <td>DTD / XSD</td>
      <td>JSON Schema</td>
    </tr>
    <tr>
      <td>Ideal per a</td>
      <td>Documents, dades estructurades</td>
      <td>APIs, dades simples</td>
    </tr>
  </tbody>
</table>

---

## √Ämbits d‚Äôaplicaci√≥

- **Web**: XHTML, RSS/Atom, SVG.  
- **Configuraci√≥**: fitxers `.xml` d‚Äôaplicacions.  
- **Intercanvi de dades**: entre sistemes ERP o CRM.  
- **Bases de dades**: emmagatzematge i consultes `XQuery`.  
- **Serveis web**: SOAP, WSDL.

---

## Eines recomanades

- **Editors XML**: VS Code, oXygen XML Editor, XML Copy Editor.  
- **Validadors**: `xmllint`, Xerces, o validaci√≥ en l√≠nia.  
- **Processadors**: parsers DOM, SAX, StAX.  
- **Visualitzaci√≥**: navegadors web o transformacions XSLT.

---

## Activitat pr√†ctica

**Crea un fitxer `persona.xml` amb aquestes dades:**  
- nom  
- edat  
- professi√≥  
- adre√ßa (carrer, ciutat, codi postal)  
Afegeix un atribut `idioma` a l‚Äôelement principal.  

üí° *Opcional:* crea tamb√© una petita DTD que el validi.

---

## En resum

> L‚ÄôXML √©s un llenguatge universal per descriure informaci√≥ de manera estructurada i interoperable.

